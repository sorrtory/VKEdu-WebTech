###########

# pull official base image
FROM python:3.13.3-slim-bookworm AS builder

# RUN echo "nameserver 8.8.8.8" > /etc/resolv.conf && \
#     echo "nameserver 1.1.1.1" >> /etc/resolv.conf

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Update pip
RUN pip install --upgrade pip

# install python dependencies
COPY requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt


#########
# FINAL #
#########

# pull official base image
FROM python:3.13.3-slim-bookworm

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup --system app && adduser --system --group app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
RUN mkdir $APP_HOME/media
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    && apt-get install -y cron \
    && apt-get clean && rm -rf /var/lib/apt/lists/*
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --upgrade pip
RUN pip install --no-cache /wheels/*

# copy project
COPY askme_fedukov/ $APP_HOME/

# set up crontab for cache
COPY prod/crontab /etc/cron.d/update_cache

# Give execution rights on the cron job
RUN chmod 0644 /etc/cron.d/update_cache
# Apply cron job
RUN crontab /etc/cron.d/update_cache
# Create the log file to be able to run tail
RUN touch /var/log/cron.log

# Set up entrypoint script
COPY prod/cron.sh cron.sh
RUN sed -i 's/\r$//g' cron.sh
RUN chmod +x cron.sh

CMD [ "/bin/bash", "-c", "export -p > .env && cron && tail -f /var/log/cron.log" ]